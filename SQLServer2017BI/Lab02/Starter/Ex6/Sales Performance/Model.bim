{
  "name": "SemanticModel",
  "compatibilityLevel": 1400,
  "model": {
    "culture": "en-US",
    "dataSources": [
      {
        "type": "structured",
        "name": "SQL/localhost;AdventureWorksDW2016",
        "connectionDetails": {
          "protocol": "tds",
          "address": {
            "server": "localhost",
            "database": "AdventureWorksDW2016"
          },
          "authentication": null,
          "query": null
        },
        "options": {},
        "credential": {
          "AuthenticationKind": "ServiceAccount",
          "EncryptConnection": false
        }
      },
      {
        "type": "structured",
        "name": "File/D:\\SQLServer2017BI\\Lab02\\Assets\\SalesTarget csv",
        "connectionDetails": {
          "protocol": "file",
          "address": {
            "path": "D:\\SQLServer2017BI\\Lab02\\Assets\\SalesTarget.csv"
          },
          "authentication": null,
          "query": null
        },
        "options": {},
        "credential": {
          "AuthenticationKind": "ServiceAccount",
          "kind": "File",
          "path": "d:\\sqlserver2017bi\\lab02\\assets\\salestarget.csv"
        },
        "contextExpression": [
          "let",
          "    #\"0001\" = Csv.Document(..., [Delimiter = \",\", Columns = 6, Encoding = 1252, QuoteStyle = QuoteStyle.None]),",
          "    #\"0002\" = Table.PromoteHeaders(#\"0001\", [PromoteAllScalars = true]),",
          "    #\"0003\" = Table.TransformColumnTypes(#\"0002\", {{\"Year\", Int64.Type}, {\"Employee ID\", type text}, {\"Q1\", Int64.Type}, {\"Q2\", Int64.Type}, {\"Q3\", Int64.Type}, {\"Q4\", Int64.Type}})",
          "in",
          "    #\"0003\""
        ]
      }
    ],
    "tables": [
      {
        "name": "Date",
        "dataCategory": "Time",
        "columns": [
          {
            "name": "DateKey",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "DateKey"
          },
          {
            "name": "Date",
            "dataType": "dateTime",
            "isKey": true,
            "sourceColumn": "Date"
          },
          {
            "name": "Year",
            "dataType": "string",
            "sourceColumn": "Year"
          },
          {
            "name": "Quarter",
            "dataType": "string",
            "sourceColumn": "Quarter"
          },
          {
            "name": "Month",
            "dataType": "string",
            "sourceColumn": "Month",
            "sortByColumn": "MonthKey"
          },
          {
            "type": "calculated",
            "name": "MonthKey",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "(YEAR([Date]) * 100) + MONTH([Date])"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/localhost;AdventureWorksDW2016\",",
                "    dbo_DimDate = Source{[Schema=\"dbo\",Item=\"DimDate\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(dbo_DimDate, each [FullDateAlternateKey] > #date(2013, 12, 31)),",
                "    #\"Removed Other Columns\" = Table.SelectColumns(#\"Filtered Rows\",{\"DateKey\", \"FullDateAlternateKey\"}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Other Columns\",{{\"FullDateAlternateKey\", \"Date\"}}),",
                "    #\"Added Custom\" = Table.AddColumn(#\"Renamed Columns\", \"Year\", each \"CY\" & Number.ToText(Date.Year([Date]))),",
                "    #\"Added Custom1\" = Table.AddColumn(#\"Added Custom\", \"Quarter\", each [Year] & \" Q\" & Number.ToText(Date.QuarterOfYear([Date]))),",
                "    #\"Added Custom2\" = Table.AddColumn(#\"Added Custom1\", \"Month\", each Number.ToText(Date.Year([Date])) & \" \" & Date.ToText([Date], \"MMM\")),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Added Custom2\",{{\"Year\", type text}, {\"Quarter\", type text}, {\"Month\", type text}})",
                "in",
                "    #\"Changed Type\""
              ]
            }
          }
        ],
        "hierarchies": [
          {
            "name": "Calendar",
            "levels": [
              {
                "name": "Year",
                "ordinal": 0,
                "column": "Year"
              },
              {
                "name": "Quarter",
                "ordinal": 1,
                "column": "Quarter"
              },
              {
                "name": "Month",
                "ordinal": 2,
                "column": "Month"
              }
            ]
          }
        ]
      },
      {
        "name": "Salesperson",
        "columns": [
          {
            "name": "EmployeeKey",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "EmployeeKey"
          },
          {
            "name": "Employee ID",
            "dataType": "string",
            "sourceColumn": "Employee ID"
          },
          {
            "name": "LoginID",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "LoginID"
          },
          {
            "name": "Region",
            "dataType": "string",
            "sourceColumn": "Region"
          },
          {
            "name": "Country",
            "dataType": "string",
            "sourceColumn": "Country"
          },
          {
            "name": "Group",
            "dataType": "string",
            "sourceColumn": "Group"
          },
          {
            "name": "Salesperson",
            "dataType": "string",
            "sourceColumn": "Salesperson"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/localhost;AdventureWorksDW2016\",",
                "    dbo_DimEmployee = Source{[Schema=\"dbo\",Item=\"DimEmployee\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(dbo_DimEmployee, each ([SalesPersonFlag] = true)),",
                "    #\"Added Custom\" = Table.AddColumn(#\"Filtered Rows\", \"Salesperson\", each [FirstName] & \" \" & [LastName]),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Added Custom\",{{\"Salesperson\", type text}}),",
                "    #\"Removed Other Columns\" = Table.SelectColumns(#\"Changed Type\",{\"EmployeeKey\", \"EmployeeNationalIDAlternateKey\", \"LoginID\", \"DimSalesTerritory\", \"Salesperson\"}),",
                "    #\"Expanded DimSalesTerritory\" = Table.ExpandRecordColumn(#\"Removed Other Columns\", \"DimSalesTerritory\", {\"SalesTerritoryRegion\", \"SalesTerritoryCountry\", \"SalesTerritoryGroup\"}, {\"SalesTerritoryRegion\", \"SalesTerritoryCountry\", \"SalesTerritoryGroup\"}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Expanded DimSalesTerritory\",{{\"EmployeeNationalIDAlternateKey\", \"Employee ID\"}, {\"SalesTerritoryRegion\", \"Region\"}, {\"SalesTerritoryCountry\", \"Country\"}, {\"SalesTerritoryGroup\", \"Group\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ],
        "hierarchies": [
          {
            "name": "Salespeople",
            "levels": [
              {
                "name": "Group",
                "ordinal": 0,
                "column": "Group"
              },
              {
                "name": "Country",
                "ordinal": 1,
                "column": "Country"
              },
              {
                "name": "Region",
                "ordinal": 2,
                "column": "Region"
              },
              {
                "name": "Salesperson",
                "ordinal": 3,
                "column": "Salesperson"
              }
            ]
          }
        ]
      },
      {
        "name": "Product",
        "columns": [
          {
            "name": "ProductKey",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ProductKey"
          },
          {
            "name": "Product",
            "dataType": "string",
            "sourceColumn": "Product"
          },
          {
            "name": "Color",
            "dataType": "string",
            "sourceColumn": "Color"
          },
          {
            "name": "Subcategory",
            "dataType": "string",
            "sourceColumn": "Subcategory"
          },
          {
            "name": "Category",
            "dataType": "string",
            "sourceColumn": "Category"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/localhost;AdventureWorksDW2016\",",
                "    dbo_DimProduct = Source{[Schema=\"dbo\",Item=\"DimProduct\"]}[Data],",
                "    #\"Filtered Rows\" = Table.SelectRows(dbo_DimProduct, each ([FinishedGoodsFlag] = true)),",
                "    #\"Removed Other Columns\" = Table.SelectColumns(#\"Filtered Rows\",{\"ProductKey\", \"EnglishProductName\", \"Color\", \"DimProductSubcategory\"}),",
                "    #\"Expanded DimProductSubcategory\" = Table.ExpandRecordColumn(#\"Removed Other Columns\", \"DimProductSubcategory\", {\"EnglishProductSubcategoryName\", \"DimProductCategory\"}, {\"EnglishProductSubcategoryName\", \"DimProductCategory\"}),",
                "    #\"Expanded DimProductCategory\" = Table.ExpandRecordColumn(#\"Expanded DimProductSubcategory\", \"DimProductCategory\", {\"EnglishProductCategoryName\"}, {\"EnglishProductCategoryName\"}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Expanded DimProductCategory\",{{\"EnglishProductName\", \"Product\"}, {\"EnglishProductSubcategoryName\", \"Subcategory\"}, {\"EnglishProductCategoryName\", \"Category\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ],
        "hierarchies": [
          {
            "name": "Products",
            "levels": [
              {
                "name": "Category",
                "ordinal": 0,
                "column": "Category"
              },
              {
                "name": "Subcategory",
                "ordinal": 1,
                "column": "Subcategory"
              },
              {
                "name": "Product",
                "ordinal": 2,
                "column": "Product"
              }
            ]
          }
        ]
      },
      {
        "name": "Reseller",
        "columns": [
          {
            "name": "ResellerKey",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ResellerKey"
          },
          {
            "name": "Business Type",
            "dataType": "string",
            "sourceColumn": "Business Type"
          },
          {
            "name": "Reseller",
            "dataType": "string",
            "sourceColumn": "Reseller"
          },
          {
            "name": "City",
            "dataType": "string",
            "sourceColumn": "City",
            "dataCategory": "City"
          },
          {
            "name": "State-Province",
            "dataType": "string",
            "sourceColumn": "State-Province",
            "dataCategory": "StateOrProvince"
          },
          {
            "name": "Country-Region",
            "dataType": "string",
            "sourceColumn": "Country-Region",
            "dataCategory": "Country"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/localhost;AdventureWorksDW2016\",",
                "    dbo_DimReseller = Source{[Schema=\"dbo\",Item=\"DimReseller\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(dbo_DimReseller,{\"ResellerKey\", \"BusinessType\", \"ResellerName\", \"DimGeography\"}),",
                "    #\"Expanded DimGeography\" = Table.ExpandRecordColumn(#\"Removed Other Columns\", \"DimGeography\", {\"City\", \"StateProvinceName\", \"EnglishCountryRegionName\"}, {\"City\", \"StateProvinceName\", \"EnglishCountryRegionName\"}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Expanded DimGeography\",{{\"BusinessType\", \"Business Type\"}, {\"ResellerName\", \"Reseller\"}, {\"StateProvinceName\", \"State-Province\"}, {\"EnglishCountryRegionName\", \"Country-Region\"}})",
                "in",
                "    #\"Renamed Columns\""
              ]
            }
          }
        ],
        "hierarchies": [
          {
            "name": "Resellers",
            "levels": [
              {
                "name": "Business Type",
                "ordinal": 0,
                "column": "Business Type"
              },
              {
                "name": "Reseller",
                "ordinal": 1,
                "column": "Reseller"
              }
            ]
          },
          {
            "name": "Geography",
            "levels": [
              {
                "name": "Country-Region",
                "ordinal": 0,
                "column": "Country-Region"
              },
              {
                "name": "State-Province",
                "ordinal": 1,
                "column": "State-Province"
              },
              {
                "name": "City",
                "ordinal": 2,
                "column": "City"
              },
              {
                "name": "Reseller",
                "ordinal": 3,
                "column": "Reseller"
              }
            ]
          }
        ]
      },
      {
        "name": "Sales",
        "columns": [
          {
            "name": "ProductKey",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ProductKey"
          },
          {
            "name": "OrderDateKey",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "OrderDateKey"
          },
          {
            "name": "ResellerKey",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ResellerKey"
          },
          {
            "name": "EmployeeKey",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "EmployeeKey"
          },
          {
            "name": "OrderQuantity",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "OrderQuantity"
          },
          {
            "name": "TotalProductCost",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "TotalProductCost"
          },
          {
            "name": "SalesAmount",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "SalesAmount"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source = #\"SQL/localhost;AdventureWorksDW2016\",",
                "    dbo_FactResellerSales = Source{[Schema=\"dbo\",Item=\"FactResellerSales\"]}[Data],",
                "    #\"Removed Other Columns\" = Table.SelectColumns(dbo_FactResellerSales,{\"ProductKey\", \"OrderDateKey\", \"ResellerKey\", \"EmployeeKey\", \"OrderQuantity\", \"TotalProductCost\", \"SalesAmount\"})",
                "in",
                "    #\"Removed Other Columns\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Distinct Products",
            "expression": "DISTINCTCOUNT([ProductKey])",
            "formatString": "#,0"
          },
          {
            "name": "Quantity",
            "expression": "SUM([OrderQuantity])",
            "formatString": "#,0"
          },
          {
            "name": "Cost",
            "expression": "SUM([TotalProductCost])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Sales",
            "expression": "SUM([SalesAmount])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\" ThousandSeparator=\"True\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Profit",
            "expression": "[Sales] - [Cost]",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Profit%",
            "expression": "DIVIDE([Profit], [Sales])",
            "formatString": "0.00 %;-0.00 %;0.00 %"
          },
          {
            "name": "Sales YTD",
            "expression": "TOTALYTD([Sales], 'Date'[Date])",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          }
        ]
      },
      {
        "name": "Target",
        "columns": [
          {
            "name": "DateKey",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "DateKey"
          },
          {
            "name": "Employee ID",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Employee ID"
          },
          {
            "name": "TargetAmount",
            "dataType": "decimal",
            "isHidden": true,
            "sourceColumn": "TargetAmount"
          }
        ],
        "partitions": [
          {
            "name": "Partition",
            "dataView": "full",
            "source": {
              "type": "m",
              "expression": [
                "let",
                "    Source=#\"File/D:\\SQLServer2017BI\\Lab02\\Assets\\SalesTarget csv\",",
                "    #\"Unpivoted Columns\" = Table.UnpivotOtherColumns(Source, {\"Year\", \"Employee ID\"}, \"Attribute\", \"Value\"),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Unpivoted Columns\",{{\"Attribute\", \"Quarter\"}, {\"Value\", \"TargetAmount\"}}),",
                "    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Renamed Columns\",{{\"TargetAmount\", Currency.Type}}),",
                "    #\"Replaced Value\" = Table.ReplaceValue(#\"Changed Type1\",\"Q\",\"\",Replacer.ReplaceText,{\"Quarter\"}),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Replaced Value\",{{\"Quarter\", Int64.Type}}),",
                "    #\"Added Custom\" = Table.AddColumn(#\"Changed Type\", \"DateKey\", each ([Year] * 10000) + ((([Quarter] * 3) - 2) * 100) + 1),",
                "    #\"Changed Type2\" = Table.TransformColumnTypes(#\"Added Custom\",{{\"DateKey\", Int64.Type}}),",
                "    #\"Removed Other Columns\" = Table.SelectColumns(#\"Changed Type2\",{\"Employee ID\", \"TargetAmount\", \"DateKey\"}),",
                "    #\"Reordered Columns\" = Table.ReorderColumns(#\"Removed Other Columns\",{\"DateKey\", \"Employee ID\", \"TargetAmount\"})",
                "in",
                "    #\"Reordered Columns\""
              ]
            }
          }
        ],
        "measures": [
          {
            "name": "Target",
            "expression": [
              "",
              "IF(",
              "\tISFILTERED('Date'[Month]),",
              "\tSUMX(",
              "\t\tVALUES('Date'[Quarter]),",
              "\t\tCALCULATE(",
              "\t\t\tSUM([TargetAmount]),",
              "\t\t\tALLEXCEPT('Date', 'Date'[Quarter])",
              "\t\t) / 3 * CALCULATE(DISTINCTCOUNT('Date'[Month]))",
              "\t),",
              "\tSUM([TargetAmount])",
              ")"
            ],
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Variance",
            "expression": "[Sales] - [Target]",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Variance%",
            "expression": "DIVIDE([Variance], [Target])",
            "formatString": "0.00 %;-0.00 %;0.00 %"
          },
          {
            "name": "Sales Performance",
            "expression": "[Sales]",
            "formatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
            "kpi": {
              "targetExpression": "'Target'[Target]",
              "targetFormatString": "\\$#,0.00;(\\$#,0.00);\\$#,0.00",
              "statusGraphic": "Shapes",
              "statusExpression": [
                "var x='Target'[Sales Performance]/'Target'[_Sales Performance Goal] return",
                "            if(ISBLANK(x),BLANK(),",
                "                    If(x<0.9,-1,",
                "\t                If(x<1,0,1)",
                "                )",
                "            )",
                "            "
              ],
              "annotations": [
                {
                  "name": "GoalType",
                  "value": "Measure"
                },
                {
                  "name": "KpiStatusType",
                  "value": "Linear"
                },
                {
                  "name": "KpiThresholdType",
                  "value": "Percentage"
                },
                {
                  "name": "KpiThresholdOrdering",
                  "value": "Ascending"
                },
                {
                  "name": "KpiThresholdCount",
                  "value": "2"
                },
                {
                  "name": "KpiThreshold_0",
                  "value": "90"
                },
                {
                  "name": "KpiThreshold_1",
                  "value": "100"
                }
              ]
            },
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\" Accuracy=\"2\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          }
        ]
      }
    ],
    "relationships": [
      {
        "name": "bb2632ad-2cc3-4c92-9e02-98a638fdc4df",
        "fromTable": "Sales",
        "fromColumn": "OrderDateKey",
        "toTable": "Date",
        "toColumn": "DateKey"
      },
      {
        "name": "45fd2534-bbe9-4dc4-bdff-62c54cc89138",
        "fromTable": "Sales",
        "fromColumn": "EmployeeKey",
        "toTable": "Salesperson",
        "toColumn": "EmployeeKey"
      },
      {
        "name": "400d03d9-033a-47f5-a604-d22f988e81a0",
        "fromTable": "Sales",
        "fromColumn": "ProductKey",
        "toTable": "Product",
        "toColumn": "ProductKey"
      },
      {
        "name": "46475ea5-b09c-401d-8edf-e075dc48b4e6",
        "fromTable": "Sales",
        "fromColumn": "ResellerKey",
        "toTable": "Reseller",
        "toColumn": "ResellerKey"
      },
      {
        "name": "7a2572dc-1ab6-4310-b954-46c9e503e61c",
        "fromTable": "Target",
        "fromColumn": "DateKey",
        "toTable": "Date",
        "toColumn": "DateKey"
      },
      {
        "name": "c16bc947-6e7d-4358-9512-6b14d14720c2",
        "fromTable": "Target",
        "fromColumn": "Employee ID",
        "toTable": "Salesperson",
        "toColumn": "Employee ID"
      }
    ],
    "annotations": [
      {
        "name": "ClientCompatibilityLevel",
        "value": "500"
      }
    ]
  },
  "id": "SemanticModel"
}