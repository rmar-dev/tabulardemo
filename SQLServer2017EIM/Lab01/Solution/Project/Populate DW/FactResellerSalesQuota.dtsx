<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/28/2017 5:58:08 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="SQLSERVER2016BI"
  DTS:CreatorName="SQLSERVER2016BI\LabUser"
  DTS:DTSID="{997440F5-16E5-4B7F-9282-99BB1337AF05}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="13.0.4001.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="FactResellerSalesQuota"
  DTS:PackageType="5"
  DTS:ProtectionLevel="2"
  DTS:VersionBuild="3"
  DTS:VersionGUID="{4D50C744-87FA-4D4D-AFBB-D6D6E987E5A1}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[QuotaExtracts]"
      DTS:CreationName="MULTIFLATFILE"
      DTS:DTSID="{F075E979-39F3-4889-9D62-C3442D8D4760}"
      DTS:ObjectName="QuotaExtracts">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[$Package::QuotaExtractShare] + "\\" + (DT_WSTR, 4)@[$Package::FiscalYear] + "_*.csv"</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="\\SQLSERVER2016BI\QuotaExtract\2014_*.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="15"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="EmployeeID"
              DTS:DTSID="{7A5A0D66-1565-4F41-AEE0-96EF30F4B7C0}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="6"
              DTS:TextQualified="True"
              DTS:ObjectName="Q1"
              DTS:DTSID="{4E0CE442-9DBC-4870-9866-6C191EEA9993}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="6"
              DTS:TextQualified="True"
              DTS:ObjectName="Q2"
              DTS:DTSID="{01423F72-509C-4EF2-AE2B-802AD2D33400}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="6"
              DTS:TextQualified="True"
              DTS:ObjectName="Q3"
              DTS:DTSID="{0BB96F7E-52F1-4A6F-88F7-76DAD5663DA5}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="6"
              DTS:TextQualified="True"
              DTS:ObjectName="Q4"
              DTS:DTSID="{3837B006-EB57-442B-A26A-CE0EA2557682}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{AB48E9A5-1BA7-4F7E-B0E8-4D1492A667B4}"
      DTS:ObjectName="FiscalYear">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">2014</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{0BC6DDD9-B170-41EA-82D4-1F084760DCF0}"
      DTS:ObjectName="QuotaExtractShare">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">\\SQLSERVER2016BI\QuotaExtract</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Delete Existing Quotas"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{E490C3E2-89E4-44DA-AA11-197F6AEBBC81}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Delete Existing Quotas"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2016; © 2015 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{0728D114-0A82-48F1-B448-E093C2F2B061}"
          SQLTask:SqlStatementSource="EXEC [dbo].[uspFactResellerSalesQuotaDelete] ?;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="@FiscalYear"
            SQLTask:DtsVariableName="$Package::FiscalYear"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="3"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Load New Quotas"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{1AA3750A-B5CD-4F7A-9F8F-D0F84C01A4EF}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load New Quotas"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Load New Quotas\Derive DateKey"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;10"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Derive DateKey"
              version="10">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public Int32 FiscalYear
    {
        get
        {
            return (Int32)(ParentComponent.ReadOnlyVariables["FiscalYear"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        switch (Row.FiscalQuarter)
        {
            case "Q1":
                Row.DateKey = ((Variables.FiscalYear - 1) * 10000) + 701;
                break;
            case "Q2":
                Row.DateKey = ((Variables.FiscalYear - 1) * 10000) + 1001;
                break;
            case "Q3":
                Row.DateKey = (Variables.FiscalYear * 10000) + 101;
                break;
            case "Q4":
                Row.DateKey = (Variables.FiscalYear * 10000) + 401;
                break;
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String FiscalQuarter
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool FiscalQuarter_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Int32 DateKey
    {
        set
        {
            this[1] = value;
        }
    }
    public bool DateKey_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_6d492695a31c4e80b10005977181ae4d.Properties.Settings.get_Default():SC_6d492695a31c4e80b10005977181ae4d.Properties.Sett" +
    "ings")]

namespace SC_6d492695a31c4e80b10005977181ae4d.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_6d492695a31c4e80b10005977181ae4d.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{5bfba191-cf3a-448e-a16f-69d3a77feed5}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_6d492695a31c4e80b10005977181ae4d</RootNamespace>
    <AssemblyName>SC_6d492695a31c4e80b10005977181ae4d</AssemblyName>
    <TargetFrameworkVersion>v4.5</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=13.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_6d492695a31c4e80b10005977181ae4d" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC130</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>SC_6d492695a31c4e80b10005977181ae4d</msb:CodeName>
		<msb:DisplayName>SC_6d492695a31c4e80b10005977181ae4d</msb:DisplayName>
		<msb:ProjectId>{A9EA5F22-8735-47E8-929B-2144B03B6DAC}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="SC_6d492695a31c4e80b10005977181ae4d.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ComponentWrapper.cs"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_6d492695a31c4e80b10005977181ae4d")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_6d492695a31c4e80b10005977181ae4d")]
[assembly: AssemblyCopyright("Copyright @  2017")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_6d492695a31c4e80b10005977181ae4d.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_6d492695a31c4e80b10005977181ae4d.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_6d492695a31c4e80b10005977181ae4d.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_6d492695a31c4e80b10005977181ae4d.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_6d492695a31c4e80b10005977181ae4d.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_6d492695a31c4e80b10005977181ae4d.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAMS3U1kAAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAAPjQA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAOwzAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAARBQAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAg
NAAAAAAAAEgAAAACAAUAhCIAALAQAAABAAAAAAAAADQzAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAMAtQAAAAEAABEDbwYAAAYK
BnIBAABwKBIAAAotKAZyBwAAcCgSAAAKLTsGcg0AAHAoEgAACi1OBnITAABwKBIAAAotXCoDAnsC
AAAEbxIAAAYXWSAQJwAAWiC9AgAAWG8IAAAGKgMCewIAAARvEgAABhdZIBAnAABaIOkDAABYbwgA
AAYqAwJ7AgAABG8SAAAGIBAnAABaH2VYbwgAAAYqAwJ7AgAABG8SAAAGIBAnAABaIJEBAABYbwgA
AAYqHgIoDAAABioqAgMEBSgTAAAKKlICexQAAAoCexUAAAoWlG8WAAAKKiICFigXAAAKKjoCFwOM
GwAAASgYAAAKKloDLAgCFygZAAAKKnIZAABwcxoAAAp6HgIoGwAACioeAigcAAAKKn4CKB0AAAoC
AnMQAAAGfQEAAAQCAnMRAAAGfQIAAAQqkgRytgAAcBpvHgAACiwVAgUCAygfAAAKDgRzBQAABm8O
AAAGKkorBwIDbw8AAAYDbwoAAAYt8SoGKjoCKCAAAAoCA30DAAAEKjoCKCAAAAoCA30EAAAEKpYC
ewQAAARvIQAACnLGAABwbyIAAAooIwAACm8kAAAKpRsAAAEqHgIoIAAACiqufgUAAAQtHnLcAABw
0AcAAAIoJQAACm8mAAAKcycAAAqABQAABH4FAAAEKhp+BgAABCoeAoAGAAAEKhp+BwAABCoeAigo
AAAKKi5zGAAABoAHAAAEKkJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAANgFAAAj
fgAARAYAADwHAAAjU3RyaW5ncwAAAACADQAAUAEAACNVUwDQDgAAEAAAACNHVUlEAAAA4A4AANAB
AAAjQmxvYgAAAAAAAAACAAABVxWiAQkBAAAA+gEzABYAAAEAAAAkAAAACAAAAAcAAAAZAAAADwAA
ACgAAAAQAAAAAQAAAAQAAAAIAAAACQAAAAEAAAAFAAAAAQAAAAAALAMBAAAAAAAGACMCDAUGALcC
DAUGAG8B+QQPAIAFAAAGAJwB4gMGAAYC4gMGAOcB4gMGAJ4C4gMGAEMC4gMGAFwC4gMGALMB4gMG
AM4B8gIKAHcCvAAKAJEEvAAOAIIEvAAKACsEvAAKAFIGvAAGABUGmgMGAFIB+QQGAKIELAUGAB8E
zQMSACIBFgMSAIMBFgMSAAoBuAMGADcBDAUGAA8DmgMGADoAmgMGAPQDmgMGAA4EmgMWABEAsgQW
AAEAsgRHAMgGAAAWACIAsgQGAN0AmgMGAI4AmgMGACcH4gMAAAAAQAAAAAAAAQABAAEAEACtAwAA
EAABAAEAAQAQAHUEAAA5AAEABQABABAANAYAAEUAAQAMAAEAEAAJBgAASQADABAAAQAQAMoFAABJ
AAQAEQAAABAAMwWPBUkABQATAAABEAD5BY8FYQAHABcABgAJBpkABgDKBZ0AAQBCBqEAAQBCBqEA
EQChA6UAEQD6AKkAEQB+AK0AUCAAAAAAxgDVAgYAAQBYIAAAAADGAOACBgABAGAgAAAAAMYA+Aax
AAEAISEAAAAAhhjsBAYAAgApIQAAAACGGOwEJQACADQhAAAAAIYI2gS3AAUASSEAAAAAhghUA0cA
BQBSIQAAAACGCBcHAQAFAGEhAAAAAIYIbQO7AAYAeCEAAAAAhgAPB0cABwCAIQAAAACGABwGRwAH
AIghAAAAAIYY7AQGAAcAqCEAAAAAxgCnBsAABwDNIQAAAADGAaAGsQALAOAhAAAAAMYB+AaxAAwA
4iEAAAAAhhjsBMoADQDxIQAAAACGGOwEygAOAAAiAAAAAIYIZgTQAA8AJiIAAAAAgxjsBAYADwAu
IgAAAACTCJ4E1AAPAFoiAAAAAJMI4gDZAA8AYSIAAAAAkwjuAN4ADwBpIgAAAACWCCgG5AAQAHAi
AAAAAIYY7AQGABAAeCIAAAAAkRjyBOkAEAAAAAEAEwcAAAEAlwQAAAIA1AUAAAMAOQQAAAEA7AIA
AAEA7AIAAAEASQAAAAIAsgAAAAMAlwQAAAQAOQQAAAEAlwQAAAEAEwcAAAEAWAYAAAEAWAYAAAEA
7AIJAOwEAQARAOwEBgAZAOwECgApAOwEEAAxAOwEEAA5AOwEEABBAOwEEABJAOwEEABRAOwEEABZ
AOwEEABhAOwEEABpAOwEBgCZAOwEBgC5AOwEFQDJAOwEBgCJANUCBgCJAOACBgDRADAHHwBxAOwE
JQBxAJcELwBxANQFMwB5AAwDNwBxAHkDPABxAJEDQQBxAIADAQDhAOwEEABxAA8HRwBxABwGRwCJ
AOwEBgDRAAIGSwCJAOgFUgCRAOwEBgCJAL4FWADxAIgDXQCJAOMGYwD5ALQGaQARAaAAcAARASMH
eQChAOwEfwDBAOwEBgAuAAsACAEuABMAEQEuABsAMAEuACMAOQEuACsAYgEuADMAYgEuADsAYgEu
AEMAOQEuAEsAaAEuAFMAYgEuAFsAfwFDAGMAyQHJAHMAMAHhAHsAyQHjAGsAyQHpAHMAMAEbAAMA
AQAGAAUABwAGAAgACAAAAN4E7QAAAFgD8QAAABsH9QAAAHED8QAAAGoE9QAAAKIE+QAAAAIB/gAA
ACwGAwECAAYAAwACAAcABQABAAgABwABAAkACQACABIACwACABQADQACABUADwABABYADwACABcA
EQAEgAAAAQAAAAAAAAAAAAAAAABaAAAABAAAAAAAAAAAAAAAhwBRAAAAAAANAAAAAAAAAAAAAACQ
AGIGAAAAAA0AAAAAAAAAAAAAAJAAfwYAAAAABAAAAAAAAAAAAAAAhwCaAwAAAAANAAAAAAAAAAAA
AACQAEMEAAAAAAAAAAABAAAAPQUAAAAAAElEVFNWYXJpYWJsZTEwMABJRFRTVmFyaWFibGVzMTAw
AElEVFNFdmFsdWF0b3JDb250ZXh0MTAwAEludDMyADxNb2R1bGU+AElucHV0SUQAbXNjb3JsaWIA
U0NfNmQ0OTI2OTVhMzFjNGU4MGIxMDAwNTk3NzE4MWFlNGQAZGVmYXVsdEluc3RhbmNlAFJ1bnRp
bWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAElucHV0TmFtZQBNaWNyb3NvZnQuU3FsU2Vy
dmVyLkR0cy5QaXBlbGluZQBUeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3Vs
dHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxl
ckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2Fi
bGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1
dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFz
c2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRl
AENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRl
AEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50
QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0
dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNp
b25pbmcAR2V0U3RyaW5nAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ182ZDQ5MjY5NWEzMWM0ZTgw
YjEwMDA1OTc3MTgxYWU0ZC5kbGwAZ2V0X0Zpc2NhbFF1YXJ0ZXJfSXNOdWxsAHNldF9EYXRlS2V5
X0lzTnVsbABTZXROdWxsAGdldF9JdGVtAHNldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBTY3Jp
cHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5S
ZWZsZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AU3RyaW5nQ29tcGFyaXNvbgBDdWx0
dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABNaWNyb3NvZnQuU3FsU2VydmVyLkRUU1J1
bnRpbWVXcmFwAGdldF9GaXNjYWxZZWFyAElucHV0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3Jp
cHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50
aW1lLldyYXBwZXIAZ2V0X0Zpc2NhbFF1YXJ0ZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9z
dGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU0Nf
NmQ0OTI2OTVhMzFjNGU4MGIxMDAwNTk3NzE4MWFlNGQuUHJvcGVydGllcy5SZXNvdXJjZXMucmVz
b3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDXzZkNDkyNjk1YTMxYzRlODBiMTAwMDU5NzcxODFhZTRk
LlByb3BlcnRpZXMAZ2V0X1JlYWRPbmx5VmFyaWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0
Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBFcXVhbHMAQ29ubmVjdGlvbnMAT2JqZWN0AEVuZE9mUm93
c2V0AGdldF9EZWZhdWx0AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBv
bmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlw
ZWxpbmVIb3N0AElucHV0MF9Qcm9jZXNzSW5wdXQAR2V0VmFsdWVXaXRoQ29udGV4dABTY3JpcHRD
b21wb25lbnRFdmFsQ29udGV4dABnZXRfRXZhbHVhdG9yQ29udGV4dABJbnB1dDBfUHJvY2Vzc0lu
cHV0Um93AE5leHRSb3cAc2V0X0RhdGVLZXkAZ2V0X0Fzc2VtYmx5AG9wX0VxdWFsaXR5AAAFUQAx
AAAFUQAyAAAFUQAzAAAFUQA0AACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBh
AG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4A
IABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBh
AGQALgAAD0kAbgBwAHUAdAAgADAAABVGAGkAcwBjAGEAbABZAGUAYQByAABxUwBDAF8ANgBkADQA
OQAyADYAOQA1AGEAMwAxAGMANABlADgAMABiADEAMAAwADAANQA5ADcANwAxADgAMQBhAGUANABk
AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAMNFzYnwXzlJo/7Q
WXLb/T8ABCABAQgDIAABBSABARERBCABAQ4FIAEBEVkDBwEOBQACAg4OCSADARI9HQgSQQMGEj0D
Bh0IBCABDggEIAECCAUgAgEIHAMgAAIGIAICDhF1BSABHQgIBCAAEnkFIAESfRwFAAASgIEGIAEc
EoCFCAABEoCJEYCNBSAAEoCRByACAQ4SgJEIt3pcVhk04IkIiYRdzYCAzJEDBhIUAwYSGAMGEkUD
BhJRAwYSVQMGEiAFIAEBEgwDIAAOBCABAQIJIAQBCA4SPRJBBSABARJFAyAACAQAABJRBAAAElUF
AAEBElUEAAASIAMAAAEDKAAOAygAAgMoAAgECAASUQQIABJVBAgAEiAIAQAIAAAAAAAeAQABAFQC
FldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDXzZkNDkyNjk1YTMxYzRlODBi
MTAwMDU5NzcxODFhZTRkAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMTcAAEkBABouTkVURnJh
bWV3b3JrLFZlcnNpb249djQuNQEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdv
cmsgNC41BAEAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJl
YWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNL
ZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNl
U2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAAUNAAAAAAAAAAAAAAuNAAAACAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAIDQAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQ
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAAOwDAAAAAAAAAAAAAOwDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsARMAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAoAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAQwBfADYAZAA0ADkAMgA2ADkANQBhADMAMQBjADQAZQA4ADAAYgAxADAAMAAwADUAOQA3ADcA
MQA4ADEAYQBlADQAZAAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAw
AC4AMAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8ANgBkADQAOQAyADYA
OQA1AGEAMwAxAGMANABlADgAMABiADEAMAAwADAANQA5ADcANwAxADgAMQBhAGUANABkAC4AZABs
AGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgA
dAAgAEAAIAAgADIAMAAxADcAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsAcwAA
AAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwA2AGQA
NAA5ADIANgA5ADUAYQAzADEAYwA0AGUAOAAwAGIAMQAwADAAMAA1ADkANwA3ADEAOAAxAGEAZQA0
AGQALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8ANgBkADQA
OQAyADYAOQA1AGEAMwAxAGMANABlADgAMABiADEAMAAwADAANQA5ADcANwAxADgAMQBhAGUANABk
AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAADgA
CAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAABANAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_6d492695a31c4e80b10005977181ae4d</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">$Package::FiscalYear</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">674e6a9c15373d28461d87cdad3b2d80</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataShaChecksum"
                  typeConverter="NOTBROWSABLE">b2fef2e3e88ef21246cc93244fb115de83ed87f1</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Load New Quotas\Derive DateKey.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load New Quotas\Derive DateKey.Inputs[Input 0].Columns[FiscalQuarter]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="FiscalQuarter"
                      lineageId="Package\Load New Quotas\Unpivot.Outputs[Unpivot Output].Columns[FiscalQuarter]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load New Quotas\Derive DateKey.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Load New Quotas\Derive DateKey.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load New Quotas\Derive DateKey.Outputs[Output 0].Columns[DateKey]"
                      dataType="i4"
                      lineageId="Package\Load New Quotas\Derive DateKey.Outputs[Output 0].Columns[DateKey]"
                      name="DateKey" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load New Quotas\FactResellerSalesQuota"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="FactResellerSalesQuota"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[FactResellerSalesQuota]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Load New Quotas\FactResellerSalesQuota.Connections[OleDbConnection]"
                  connectionManagerID="{0728D114-0A82-48F1-B448-E093C2F2B061}:external"
                  connectionManagerRefId="Project.ConnectionManagers[localhost.AdventureWorksDW2016]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Load New Quotas\FactResellerSalesQuota.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load New Quotas\FactResellerSalesQuota.Inputs[OLE DB Destination Input].Columns[QuotaAmount]"
                      cachedDataType="cy"
                      cachedName="QuotaAmount"
                      externalMetadataColumnId="Package\Load New Quotas\FactResellerSalesQuota.Inputs[OLE DB Destination Input].ExternalColumns[QuotaAmount]"
                      lineageId="Package\Load New Quotas\Unpivot.Outputs[Unpivot Output].Columns[QuotaAmount]" />
                    <inputColumn
                      refId="Package\Load New Quotas\FactResellerSalesQuota.Inputs[OLE DB Destination Input].Columns[DateKey]"
                      cachedDataType="i4"
                      cachedName="DateKey"
                      externalMetadataColumnId="Package\Load New Quotas\FactResellerSalesQuota.Inputs[OLE DB Destination Input].ExternalColumns[DateKey]"
                      lineageId="Package\Load New Quotas\Derive DateKey.Outputs[Output 0].Columns[DateKey]" />
                    <inputColumn
                      refId="Package\Load New Quotas\FactResellerSalesQuota.Inputs[OLE DB Destination Input].Columns[EmployeeKey]"
                      cachedDataType="i4"
                      cachedName="EmployeeKey"
                      externalMetadataColumnId="Package\Load New Quotas\FactResellerSalesQuota.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeKey]"
                      lineageId="Package\Load New Quotas\Lookup EmployeeKey.Outputs[Lookup Match Output].Columns[EmployeeKey]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Load New Quotas\FactResellerSalesQuota.Inputs[OLE DB Destination Input].ExternalColumns[DateKey]"
                      dataType="i4"
                      name="DateKey" />
                    <externalMetadataColumn
                      refId="Package\Load New Quotas\FactResellerSalesQuota.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeKey]"
                      dataType="i4"
                      name="EmployeeKey" />
                    <externalMetadataColumn
                      refId="Package\Load New Quotas\FactResellerSalesQuota.Inputs[OLE DB Destination Input].ExternalColumns[QuotaAmount]"
                      dataType="cy"
                      name="QuotaAmount" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load New Quotas\FactResellerSalesQuota.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Load New Quotas\FactResellerSalesQuota.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load New Quotas\FactResellerSalesQuota.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load New Quotas\FactResellerSalesQuota.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load New Quotas\FactResellerSalesQuota.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load New Quotas\FactResellerSalesQuota.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load New Quotas\Lookup EmployeeKey"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Lookup EmployeeKey"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT
	[EmployeeKey]
	,[EmployeeNationalIDAlternateKey]
FROM
	[dbo].[DimEmployee]
WHERE
	[SalesPersonFlag] = 1
	AND [EndDate] IS NULL;</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (SELECT
	[EmployeeKey]
	,[EmployeeNationalIDAlternateKey]
FROM
	[dbo].[DimEmployee]
WHERE
	[SalesPersonFlag] = 1
	AND [EndDate] IS NULL;) [refTable]
where [refTable].[EmployeeNationalIDAlternateKey] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="EmployeeKey" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="EmployeeNationalIDAlternateKey" dataType="DT_WSTR" length="15" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Load New Quotas\Unpivot.Outputs[Unpivot Output].Columns[EmployeeID]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Load New Quotas\Lookup EmployeeKey.Connections[OleDbConnection]"
                  connectionManagerID="{0728D114-0A82-48F1-B448-E093C2F2B061}:external"
                  connectionManagerRefId="Project.ConnectionManagers[localhost.AdventureWorksDW2016]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Load New Quotas\Lookup EmployeeKey.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load New Quotas\Lookup EmployeeKey.Inputs[Lookup Input].Columns[EmployeeID]"
                      cachedDataType="wstr"
                      cachedLength="15"
                      cachedName="EmployeeID"
                      lineageId="Package\Load New Quotas\Unpivot.Outputs[Unpivot Output].Columns[EmployeeID]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">EmployeeNationalIDAlternateKey</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load New Quotas\Lookup EmployeeKey.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  errorRowDisposition="FailComponent"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Load New Quotas\Lookup EmployeeKey.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load New Quotas\Lookup EmployeeKey.Outputs[Lookup Match Output].Columns[EmployeeKey]"
                      dataType="i4"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\Load New Quotas\Lookup EmployeeKey.Outputs[Lookup Match Output].Columns[EmployeeKey]"
                      name="EmployeeKey"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">EmployeeKey</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load New Quotas\Lookup EmployeeKey.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Load New Quotas\Lookup EmployeeKey.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Load New Quotas\Lookup EmployeeKey.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Load New Quotas\Lookup EmployeeKey.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load New Quotas\Lookup EmployeeKey.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load New Quotas\Lookup EmployeeKey.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load New Quotas\Lookup EmployeeKey.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load New Quotas\Lookup EmployeeKey.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load New Quotas\QuotaExtracts"
              componentClassID="Microsoft.FlatFileSource"
              contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Source"
              localeId="1033"
              name="QuotaExtracts"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether zero-length columns are treated as null."
                  name="RetainNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Load New Quotas\QuotaExtracts.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[QuotaExtracts]"
                  connectionManagerRefId="Package.ConnectionManagers[QuotaExtracts]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Load New Quotas\QuotaExtracts.Outputs[Flat File Source Output]"
                  name="Flat File Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load New Quotas\QuotaExtracts.Outputs[Flat File Source Output].Columns[EmployeeID]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load New Quotas\QuotaExtracts.Outputs[Flat File Source Output].ExternalColumns[EmployeeID]"
                      length="15"
                      lineageId="Package\Load New Quotas\QuotaExtracts.Outputs[Flat File Source Output].Columns[EmployeeID]"
                      name="EmployeeID"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Load New Quotas\QuotaExtracts.Outputs[Flat File Source Output].Columns[Q1]"
                      dataType="cy"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load New Quotas\QuotaExtracts.Outputs[Flat File Source Output].ExternalColumns[Q1]"
                      lineageId="Package\Load New Quotas\QuotaExtracts.Outputs[Flat File Source Output].Columns[Q1]"
                      name="Q1"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Load New Quotas\QuotaExtracts.Outputs[Flat File Source Output].Columns[Q2]"
                      dataType="cy"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load New Quotas\QuotaExtracts.Outputs[Flat File Source Output].ExternalColumns[Q2]"
                      lineageId="Package\Load New Quotas\QuotaExtracts.Outputs[Flat File Source Output].Columns[Q2]"
                      name="Q2"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Load New Quotas\QuotaExtracts.Outputs[Flat File Source Output].Columns[Q3]"
                      dataType="cy"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load New Quotas\QuotaExtracts.Outputs[Flat File Source Output].ExternalColumns[Q3]"
                      lineageId="Package\Load New Quotas\QuotaExtracts.Outputs[Flat File Source Output].Columns[Q3]"
                      name="Q3"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Load New Quotas\QuotaExtracts.Outputs[Flat File Source Output].Columns[Q4]"
                      dataType="cy"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Load New Quotas\QuotaExtracts.Outputs[Flat File Source Output].ExternalColumns[Q4]"
                      lineageId="Package\Load New Quotas\QuotaExtracts.Outputs[Flat File Source Output].Columns[Q4]"
                      name="Q4"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Load New Quotas\QuotaExtracts.Outputs[Flat File Source Output].ExternalColumns[EmployeeID]"
                      dataType="wstr"
                      length="15"
                      name="EmployeeID" />
                    <externalMetadataColumn
                      refId="Package\Load New Quotas\QuotaExtracts.Outputs[Flat File Source Output].ExternalColumns[Q1]"
                      dataType="cy"
                      name="Q1" />
                    <externalMetadataColumn
                      refId="Package\Load New Quotas\QuotaExtracts.Outputs[Flat File Source Output].ExternalColumns[Q2]"
                      dataType="cy"
                      name="Q2" />
                    <externalMetadataColumn
                      refId="Package\Load New Quotas\QuotaExtracts.Outputs[Flat File Source Output].ExternalColumns[Q3]"
                      dataType="cy"
                      name="Q3" />
                    <externalMetadataColumn
                      refId="Package\Load New Quotas\QuotaExtracts.Outputs[Flat File Source Output].ExternalColumns[Q4]"
                      dataType="cy"
                      name="Q4" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Load New Quotas\QuotaExtracts.Outputs[Flat File Source Error Output]"
                  isErrorOut="true"
                  name="Flat File Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load New Quotas\QuotaExtracts.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      codePage="1252"
                      dataType="text"
                      description="Flat File Source Error Output Column"
                      lineageId="Package\Load New Quotas\QuotaExtracts.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      name="Flat File Source Error Output Column" />
                    <outputColumn
                      refId="Package\Load New Quotas\QuotaExtracts.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Load New Quotas\QuotaExtracts.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Load New Quotas\QuotaExtracts.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Load New Quotas\QuotaExtracts.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Load New Quotas\Unpivot"
              componentClassID="Microsoft.UnPivot"
              contactInfo="Unpivot;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Expands an un-normalized data flow into a more normalized version. Values from multiple columns of a single record expand to multiple records in a single column. For example, expand a table that lists athletic scores with a column for each game to more records and a single score column."
              name="Unpivot">
              <inputs>
                <input
                  refId="Package\Load New Quotas\Unpivot.Inputs[Unpivot Input]"
                  hasSideEffects="true"
                  name="Unpivot Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Load New Quotas\Unpivot.Inputs[Unpivot Input].Columns[Q1]"
                      cachedDataType="cy"
                      cachedName="Q1"
                      lineageId="Package\Load New Quotas\QuotaExtracts.Outputs[Flat File Source Output].Columns[Q1]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The lineage ID of the output column that will receive the value from this input column. Or -1 if column’s value is not used in output rows."
                          name="DestinationColumn">#{Package\Load New Quotas\Unpivot.Outputs[Unpivot Output].Columns[QuotaAmount]}</property>
                        <property
                          dataType="System.String"
                          description="Specifies the value written to the PivotKey column in the output row."
                          expressionType="Notify"
                          name="PivotKeyValue">Q1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Load New Quotas\Unpivot.Inputs[Unpivot Input].Columns[Q2]"
                      cachedDataType="cy"
                      cachedName="Q2"
                      lineageId="Package\Load New Quotas\QuotaExtracts.Outputs[Flat File Source Output].Columns[Q2]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The lineage ID of the output column that will receive the value from this input column. Or -1 if column’s value is not used in output rows."
                          name="DestinationColumn">#{Package\Load New Quotas\Unpivot.Outputs[Unpivot Output].Columns[QuotaAmount]}</property>
                        <property
                          dataType="System.String"
                          description="Specifies the value written to the PivotKey column in the output row."
                          expressionType="Notify"
                          name="PivotKeyValue">Q2</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Load New Quotas\Unpivot.Inputs[Unpivot Input].Columns[Q3]"
                      cachedDataType="cy"
                      cachedName="Q3"
                      lineageId="Package\Load New Quotas\QuotaExtracts.Outputs[Flat File Source Output].Columns[Q3]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The lineage ID of the output column that will receive the value from this input column. Or -1 if column’s value is not used in output rows."
                          name="DestinationColumn">#{Package\Load New Quotas\Unpivot.Outputs[Unpivot Output].Columns[QuotaAmount]}</property>
                        <property
                          dataType="System.String"
                          description="Specifies the value written to the PivotKey column in the output row."
                          expressionType="Notify"
                          name="PivotKeyValue">Q3</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Load New Quotas\Unpivot.Inputs[Unpivot Input].Columns[Q4]"
                      cachedDataType="cy"
                      cachedName="Q4"
                      lineageId="Package\Load New Quotas\QuotaExtracts.Outputs[Flat File Source Output].Columns[Q4]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The lineage ID of the output column that will receive the value from this input column. Or -1 if column’s value is not used in output rows."
                          name="DestinationColumn">#{Package\Load New Quotas\Unpivot.Outputs[Unpivot Output].Columns[QuotaAmount]}</property>
                        <property
                          dataType="System.String"
                          description="Specifies the value written to the PivotKey column in the output row."
                          expressionType="Notify"
                          name="PivotKeyValue">Q4</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Load New Quotas\Unpivot.Inputs[Unpivot Input].Columns[EmployeeID]"
                      cachedDataType="wstr"
                      cachedLength="15"
                      cachedName="EmployeeID"
                      lineageId="Package\Load New Quotas\QuotaExtracts.Outputs[Flat File Source Output].Columns[EmployeeID]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The lineage ID of the output column that will receive the value from this input column. Or -1 if column’s value is not used in output rows."
                          name="DestinationColumn">#{Package\Load New Quotas\Unpivot.Outputs[Unpivot Output].Columns[EmployeeID]}</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the value written to the PivotKey column in the output row."
                          expressionType="Notify"
                          name="PivotKeyValue" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Load New Quotas\Unpivot.Outputs[Unpivot Output]"
                  name="Unpivot Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Load New Quotas\Unpivot.Outputs[Unpivot Output].Columns[FiscalQuarter]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Load New Quotas\Unpivot.Outputs[Unpivot Output].Columns[FiscalQuarter]"
                      name="FiscalQuarter">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the value in the PivotKeyValue property is written to the column in the new row."
                          name="PivotKey">true</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Load New Quotas\Unpivot.Outputs[Unpivot Output].Columns[QuotaAmount]"
                      dataType="cy"
                      lineageId="Package\Load New Quotas\Unpivot.Outputs[Unpivot Output].Columns[QuotaAmount]"
                      name="QuotaAmount">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the value in the PivotKeyValue property is written to the column in the new row."
                          name="PivotKey">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Load New Quotas\Unpivot.Outputs[Unpivot Output].Columns[EmployeeID]"
                      dataType="wstr"
                      length="15"
                      lineageId="Package\Load New Quotas\Unpivot.Outputs[Unpivot Output].Columns[EmployeeID]"
                      name="EmployeeID">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the value in the PivotKeyValue property is written to the column in the new row."
                          name="PivotKey">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Load New Quotas.Paths[Flat File Source Output]"
              endId="Package\Load New Quotas\Unpivot.Inputs[Unpivot Input]"
              name="Flat File Source Output"
              startId="Package\Load New Quotas\QuotaExtracts.Outputs[Flat File Source Output]" />
            <path
              refId="Package\Load New Quotas.Paths[Lookup Match Output]"
              endId="Package\Load New Quotas\FactResellerSalesQuota.Inputs[OLE DB Destination Input]"
              name="Lookup Match Output"
              startId="Package\Load New Quotas\Lookup EmployeeKey.Outputs[Lookup Match Output]" />
            <path
              refId="Package\Load New Quotas.Paths[Output 0]"
              endId="Package\Load New Quotas\Lookup EmployeeKey.Inputs[Lookup Input]"
              name="Output 0"
              startId="Package\Load New Quotas\Derive DateKey.Outputs[Output 0]" />
            <path
              refId="Package\Load New Quotas.Paths[Unpivot Output]"
              endId="Package\Load New Quotas\Derive DateKey.Inputs[Input 0]"
              name="Unpivot Output"
              startId="Package\Load New Quotas\Unpivot.Outputs[Unpivot Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{C1EA68BC-13A1-434D-BB2E-515FB7EDF64A}"
      DTS:From="Package\Delete Existing Quotas"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Load New Quotas" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="185,42"
          Id="Package\Delete Existing Quotas"
          TopLeft="167,60" />
        <NodeLayout
          Size="162,42"
          Id="Package\Load New Quotas"
          TopLeft="177.5,145.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="259,102">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,43.5"
              Start="0,0"
              End="0,36">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Load New Quotas">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="145,42"
          Id="Package\Load New Quotas\QuotaExtracts"
          TopLeft="180,44" />
        <NodeLayout
          Size="115,42"
          Id="Package\Load New Quotas\Unpivot"
          TopLeft="194.5,139.5" />
        <EdgeLayout
          Id="Package\Load New Quotas.Paths[Flat File Source Output]"
          TopLeft="252.25,86">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,53.5"
              Start="0,0"
              End="0,46">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="152,42"
          Id="Package\Load New Quotas\Derive DateKey"
          TopLeft="180,235" />
        <EdgeLayout
          Id="Package\Load New Quotas.Paths[Unpivot Output]"
          TopLeft="254,181.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,53.5"
              Start="0,0"
              End="0,46">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="159,42"
          Id="Package\Load New Quotas\Lookup EmployeeKey"
          TopLeft="177,332" />
        <EdgeLayout
          Id="Package\Load New Quotas.Paths[Output 0]"
          TopLeft="256.25,277">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,55"
              Start="0,0"
              End="0,47.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="188,42"
          Id="Package\Load New Quotas\FactResellerSalesQuota"
          TopLeft="162,425" />
        <EdgeLayout
          Id="Package\Load New Quotas.Paths[Lookup Match Output]"
          TopLeft="256.25,374">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,51"
              Start="0,0"
              End="0,43.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,15.9453125,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Load New Quotas\Lookup EmployeeKey">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:int">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Load New Quotas\FactResellerSalesQuota">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>